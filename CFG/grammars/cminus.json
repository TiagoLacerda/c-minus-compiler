{
    "name":"cminus",
    "root":"program",
    "states":[
        "program",
        "decl-list",
        "declaration",
        "var-decl",
        "type-spec",
        "fun-decl",
        "params",
        "param-list",
        "param",
        "compound-stmt",
        "local-decl",
        "stmt-list",
        "statement",
        "exp-stmt",
        "select-stmt",
        "iter-stmt",
        "return-stmt",
        "expression",
        "var",
        "simple-exp",
        "relop",
        "add-exp",
        "add-op",
        "term",
        "mulop",
        "factor",
        "call",
        "args",
        "arg-lst"
    ],
    "terminals":[
        "id",
        ";",
        "[",
        "num",
        "]",
        "int",
        "void",
        "(",
        ")",
        ",",
        "{",
        "}",
        "if",
        "else",
        "while",
        "return",
        "=",
        "<=",
        "<",
        ">",
        ">=",
        "==",
        "!=",
        "+",
        "-",
        "*",
        "/"
    ],
    "derivations":{
        "program":[
            ["decl-list"]
        ],
        "decl-list":[
            ["decl-list","declaration"],
            ["declaration"]
        ],
        "declaration":[
            ["var-decl"],
            ["fun-decl"]
        ],
        "var-decl":[
            ["type-spec","id",";"],
            ["type-spec","id","[","num","]"]
        ],
        "type-spec":[
            ["int"],
            ["void"]
        ],
        "fun-decl":[
            ["type-spec","id","(","params",")","compound-stmt"]
        ],
        "params":[
            ["param-list"],
            ["void"]
        ],
        "param-list":[
            ["param-list",",","param"],
            ["param"]
        ],
        "param":[
            ["type-spec","id"],
            ["type-spec","id","[","]"]
        ],
        "compound-stmt":[
            ["{","local-decl","stmt-list","}"]
        ],
        "local-decl":[
            ["local-decl","var-decl"],
            ["ε"]
        ],
        "stmt-list":[
            ["stmt-list","statement"],
            ["ε"]
        ],
        "statement":[
            ["exp-stmt"],
            ["compound-stmt"],
            ["select-stmt"],
            ["iter-stmt"],
            ["return-stmt"]
        ],
        "exp-stmt":[
            ["expression",";"],
            [";"]
        ],
        "select-stmt":[
            ["if","(","expression",")","statement"],
            ["if","(","expression",")","statement","else","statement"]
        ],
        "iter-stmt":[
            ["while","(","expression",")","statement"]
        ],
        "return-stmt":[
            ["return", "expression",";"],
            ["return",";"]
        ],
        "expression":[
            ["var","=","expression"],
            ["simple-exp"]
        ],
        "var":[
            ["id"],
            ["id","[","expression","]"]
        ],
        "simple-exp":[
            ["add-exp","relop","add-exp"],
            ["add-exp"]
        ],
        "relop":[
            ["<="],
            ["<"],
            [">"],
            [">="],
            ["=="],
            ["!="]
        ],
        "add-exp":[
            ["add-exp","add-op","term"],
            ["term"]
        ],
        "add-op":[
            ["+"],
            ["-"]
        ],
        "term":[
            ["term","mulop","factor"],
            ["factor"]
        ],
        "mulop":[
            ["*"],
            ["/"]
        ],
        "factor":[
            ["(","expression",")"],
            ["var"],
            ["call"],
            ["num"]
        ],
        "call":[
            ["id","(","args",")"]
        ],
        "args":[
            ["arg-lst"],
            ["ε"]
        ],
        "arg-lst":[
            ["arg-lst",",","expression"],
            ["expression"]
        ]
    }
}